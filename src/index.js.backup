//import Rx from 'rx'
import Cycle from '@cycle/core'
import {makeHTTPDriver} from '@cycle/http'
import {h, makeDOMDriver} from 'cycle-snabbdom'
import colorChange from './color-change'
import github from './github-search'

//list of available examples
const examples = [
  {value: 'home', text: 'Select something...'},
  {value: 'github', text: 'Github HTTP Search'},
]

//individual options for example selection
const optionDef = (example) => {
  return h('option',
    {props: {value: example.value}},
    example.text)
}

//top header which contains example selector
const headerDOM =
  h('header', [
    h('select.examples', {},
      examples.map(optionDef)
    )]
  )

const view = (header, content) =>
  h('div.app-wrapper', {}, [header, content])

function main(responses) {
  //which example to run?
  // const selection$ = responses.DOM.select('select.examples').events('change')
  //   .map(ev => ev.target.value)
  //   .startWith(examples[0].value)

  const content = github(responses)

  // //build full DOM
  const view$ = content.DOM
    .map((cDOM) => view(headerDOM, cDOM))

  //build object to return
  let output = content
  content.DOM = view$ //patch the new DOM observable
  return output
}

Cycle.run(main, {
  DOM: makeDOMDriver('#app-container'),
  HTTP: makeHTTPDriver(),
})
